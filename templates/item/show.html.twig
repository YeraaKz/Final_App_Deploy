{% extends 'base.html.twig' %}

{% block title %}Item Details{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white text-center">
                <h2>{{ item.name }}</h2>
            </div>
            <div class="card-body text-center">
                {% if item.itemKey %}
                    <img src="{{ item.itemKey }}" alt="{{ item.name }}" class="img-fluid mb-3" style="max-width: 100%; height: auto;">
                {% endif %}
                <h3 class="font-weight-bold">Description:</h3>
                <p class="text-muted">{{ description|raw }}</p>
                {% for custom_attribute in item.attributes %}
                    <div class="mb-2">
                        <h4>{{ custom_attribute.attribute.name }}:</h4>
                        <p class="text-secondary">
                            {% if custom_attribute.attribute.type.value == 'DATE' %}
                                {{ custom_attribute.getValue()|date('Y-m-d') }}
                            {% elseif custom_attribute.attribute.type.value == 'BOOL' %}
                                {{ custom_attribute.getValue() ? 'Yes' : 'No' }}
                            {% else %}
                                {{ custom_attribute.getValue() }}
                            {% endif %}
                        </p>
                    </div>
                {% endfor %}
            </div>
            <div class="card-footer d-flex justify-content-between align-items-center">
                {% if app.user %}
                <button id="like-button" class="btn">
                        <i class="fas fa-heart{{ item.isLikedByUser(app.user) ? ' text-danger' : '' }}"></i>
                </button>
                {% endif %}
                <div id="like-count">{{ item.likes|length }} likes</div>
            </div>
        </div>

        <div class="card mt-4 shadow-sm mb-3">
            <div class="card-header bg-secondary text-white">
                <h3>Comments:</h3>
            </div>
            <div class="card-body">
                <div id="comments" class="comments mb-3">
                    {% for comment in item.comments %}
                        <div class="comment py-2 px-3 my-2 border rounded bg-light">
                            <strong>{{ comment.user.email }}</strong>
                            <small class="text-muted">{{ comment.createdAt|date('Y-m-d H:i:s') }}</small>
                            <p>{{ comment.content }}</p>
                        </div>
                    {% endfor %}
                </div>


                <div class="form-group">
                    <textarea id="comment-content" class="form-control" placeholder="Write your comment here..."></textarea>
                    {% if app.user %}
                        <button id="submit-comment" class="btn btn-primary mt-2">Comment</button>
                    {% else %}
                        <button class="btn btn-primary mt-3"><a href="{{ path('app_login') }}">Comment</a></button>
                    {% endif %}
                </div>

            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const itemId = {{ item.id }};
            const commentInput = document.getElementById('comment-content');
            const submitButton = document.getElementById('submit-comment');
            const commentsContainer = document.getElementById('comments');


            submitButton.addEventListener('click', async function() {
                const commentContent = commentInput.value.trim();
                if (commentContent) {
                    try {
                        const response = await fetch(`/api/items/${itemId}/comments`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ content: commentContent })
                        });
                        if (response.ok) {
                            const newComment = await response.json();
                            addCommentToDOM(newComment);
                            commentInput.value = '';
                        } else {
                            console.error('Failed to post comment:', response.statusText);
                        }
                    } catch (error) {
                        console.error('Failed to post comment:', error);
                    }
                }
            });

            function addCommentToDOM(comment) {
                const commentElement = document.createElement('div');
                commentElement.className = 'comment py-2 px-3 my-2 border rounded bg-light';
                commentElement.innerHTML = `
                    <strong>${comment.author}</strong> <small class="text-muted">${new Date(comment.createdAt).toLocaleString()}</small>
                    <p>${comment.content}</p>
                `;
                commentsContainer.appendChild(commentElement);
            }

            async function fetchComments() {
                try {
                    const response = await fetch(`/api/items/${itemId}/comments`);
                    const data = await response.json();
                    updateComments(data);
                } catch (error) {
                    console.error('Failed to fetch comments:', error);
                }
            }

            function updateComments(comments) {
                commentsContainer.innerHTML = '';
                comments.forEach(comment => {
                    addCommentToDOM(comment);
                });
            }

            setInterval(fetchComments, 5000);
        });
    </script>
{% endblock %}

